# 开发环境配置
server:
  port: 8080 # 后端服务端口

spring:
  # --- 数据库配置 ---
  datasource:
    url: jdbc:mysql://localhost:3306/campus_trade?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root       # 请替换为你的数据库用户名
    password: kyt040729  # 请替换为你的数据库密码
    driver-class-name: com.mysql.cj.jdbc.Driver

  # --- Redis 配置 ---
  redis:
    host: localhost
    port: 6379
    password: 123456 # 如果你的 Redis 设置了密码，请填写
    database: 0 # 使用哪个 Redis 数据库

  # --- 邮件配置 (请填写真实信息) ---
  mail:
    host: smtp.qq.com # 【示例】你的邮箱服务商的 SMTP 地址 (例如 QQ 邮箱)
    port: 587          # SMTP 端口 (QQ 邮箱通常是 587 或 465 for SSL)
    username: 983786867@qq.com # 【重要】你的发件邮箱账号
    password: tdjwcsxzhlsmbfcc # 【重要】你的邮箱授权码 (不是登录密码!)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true # 启用 STARTTLS
            required: true
    default-encoding: UTF-8
    from: 983786867@qq.com # 【重要】显示的发件人地址

  # --- Spring Security (本阶段暂时允许所有) ---
  # security: # Security 的配置主要在 SecurityConfig.java 中

# --- JWT 配置 ---
jwt:
  secret: rE1eM2lR9fD7vX8aK9sE0yB1zL6dL0fM4tB6yA9sS4sO4nL5wP6cM4xG0sI6fC3t # 【重要】替换为你自己的复杂密钥，不要泄露！
  expiration: 86400000 # Token 有效期 (毫秒)，这里是 1 天 (24 * 60 * 60 * 1000)
  header: Authorization # HTTP Header 中存放 Token 的字段名
  tokenHead: Bearer  # Token 的前缀

# --- MyBatis Plus 配置 ---
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*.xml # 如果使用 XML Mapper
    # configuration:
  # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 开发时打印 SQL
  global-config:
    db-config:
      # id-type: assign_id # 如果需要自定义 ID 生成策略 (如雪花算法)
      logic-delete-field: is_deleted # 全局逻辑删除字段名 (如果需要)
      logic-delete-value: 1 # 逻辑删除值
      logic-not-delete-value: 0 # 未删除值